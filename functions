fn fit_screen_size() {
    resize( get_screen(), WINDOW_XSIZE, WINDOW_YSIZE )
    if pixel_size == 4 {
        if WINDOW_XSIZE < MAXRAWXSIZE / 4 {
            set_pixel_size( 2 )
            pixel_size = 2
        }
    } if pixel_size == 2 {
        if WINDOW_XSIZE >= MAXRAWXSIZE / 2 {
            set_pixel_size( 4 )
            pixel_size = 4
        }
    } if pixel_size != 2 && pixel_size != 4 {
        if WINDOW_XSIZE >= MAXRAWXSIZE/pixel_size {
            set_pixel_size( 4 )
            pixel_size = 4
        } else {
            set_pixel_size( 2 )
            pixel_size = 2
        }
    }
    

    scr = get_screen()
    xsize = get_xsize( scr )
    ysize = get_ysize( scr )
    hxsize = xsize div 2
    hysize = ysize div 2
}

fn draw() {
    clear( #006464 )

    col = #64ff64
    if state[ 2 ] {
        $temp = 105 + 150 * state[ 2 ] / MAXENERGY
        col = get_color( $temp, 255, $temp )
    }
    fbox( x - HPXSIZE, y - HPYSIZE, PXSIZE, PYSIZE, col )
    
    if DEBUG {
        t = ""
        sprintf( t, "x %d vx %f\ny %d vy %f\nkey %d\nstate %d %d %d\nfps %d\nsizes %dpx / %dpx\nrawsizes %dpx / %dpy\npixelsize %drawpx",
            x, vx, y, vy, EVT[ EVT_KEY ], state[ 0 ], state[ 1 ], state[ 2 ], FPS, xsize, ysize, xsize*pixel_size, ysize*pixel_size, pixel_size )
        print(t, -hxsize, -hysize, WHITE, TOP | LEFT)

        t = ""
        sprintf( t, "GRAVITY %f\nFLOORFRICTIONFACTOR %f\nAIRRESISTANCEFACTOR %f\nWALLBOUNCINESS %f\nPXSIZE %f\nPYSIZE %f\nUSERFPS %f\nMAXRAWXSIZE %f\nMAXENERGY %f\nDASH %f",
             GRAVITY, FLOORFRICTIONFACTOR, AIRRESISTANCEFACTOR, WALLBOUNCINESS, PXSIZE, PYSIZE, USERFPS, MAXRAWXSIZE, MAXENERGY, DASH )
        print(t, hxsize, -hysize, WHITE, TOP | RIGHT)
    }

    frame( 1000 / USERFPS )
}

fn energy_plus() {
    state[ 2 ] + 1
    if state[ 2 ] > MAXENERGY { state[ 2 ] = MAXENERGY }
}

fn jump() {
    if state[ 2 ] {
        vy = state[ 2 ] * ( -DASH )
        state[ 2 ] = 0
    } else {
        vy = -5
    }
}